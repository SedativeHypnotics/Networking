
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Random;

class QueryBuilder {
    private String domain;

    //a ByteArrayOutputStream to create OutputStream object for UDP socket
    private ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();

    //a DataOutputStream object for sending UDP packets through UDP socket
    private DataOutputStream dataOutputStream = new DataOutputStream(byteArrayOutputStream);

    //generating a 16 bit random number for identifier
    private static int queryId;

    static {
        queryId = new Random().nextInt(65536);
    }

    QueryBuilder(String domain) {
        this.domain = domain;
    }

    void build() throws IOException {
        // Identifier: A 16-bit identification field generated by the device that creates the DNS query.
        // It is copied by the server into the response, so it can be used by that device to match that
        // query to the corresponding reply received from a DNS server. This is used in a manner similar
        // to how the Identifier field is used in many of the ICMP message types.
        dataOutputStream.writeShort(queryId);

        //creating flag for standard iterative query
            /*Flag format
                0... .... .... .... = Response: Message is a query
                .000 0... .... .... = Opcode: Standard Query(0)
                .... .0.. .... .... = Truncated: Not truncated
                .... ..0. .... .... = Recursion: Don't do recursive Query
                .... .... 0... .... = Z: Reserved(0)
                .... .... ..0. .... = Non-Authenticated data: unaccepted
             */
        dataOutputStream.writeShort(0x0000);

        //Number of Questions
        dataOutputStream.writeShort(0x0001);

        //Number of answers
        dataOutputStream.writeShort(0x0000);

        //Number of authority Record
        dataOutputStream.writeShort(0x0000);

        //Number of record Count
        dataOutputStream.writeShort(0x0000);

        //writing domain name
        String[] domainParts = domain.split("\\.");
        for (String domainPart : domainParts) {
            byte[] domainBytes = domainPart.getBytes(StandardCharsets.UTF_8);
            dataOutputStream.writeByte(domainBytes.length);
            dataOutputStream.write(domainBytes);
        }

        //indicating no more additional information
        dataOutputStream.writeByte(0x00);

        //indicating a Type-A record
        dataOutputStream.writeShort(0x0001);

        //indicating a Class-IN record
        dataOutputStream.writeShort(0x0001);
    }

    byte[] queryToByteArray(){
        return byteArrayOutputStream.toByteArray();
    }
}

/*
Reference: https://stackoverflow.com/questions/36743226/java-send-udp-packet-to-dns-server
*/
